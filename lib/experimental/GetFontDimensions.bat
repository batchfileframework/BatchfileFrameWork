@echo off

:GetFontDimensions
powershell -command "Add-Type -TypeDefinition 'using System;using System.Runtime.InteropServices;public class ConsoleFontDimensions { [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)] private struct COORD { public short X; public short Y; } [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)] private struct CONSOLE_FONT_INFOEX { public uint cbSize; public uint nFont; public COORD dwFontSize; public uint FontFamily; public uint FontWeight; [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 32)] public string FaceName; } [DllImport(\"kernel32.dll\", SetLastError = true, CharSet = CharSet.Unicode)] private static extern bool GetCurrentConsoleFontEx(IntPtr hConsoleOutput, bool bMaximumWindow, ref CONSOLE_FONT_INFOEX lpConsoleCurrentFontEx); [DllImport(\"kernel32.dll\", SetLastError = true)] private static extern IntPtr GetStdHandle(int nStdHandle); private const int STD_OUTPUT_HANDLE = -11; public static void GetFontDimensions() { IntPtr hConsoleOutput = GetStdHandle(STD_OUTPUT_HANDLE); if (hConsoleOutput == IntPtr.Zero) { int errorCode = System.Runtime.InteropServices.Marshal.GetLastWin32Error(); System.Console.WriteLine(\"Failed to get console handle. Error code: \" + errorCode); System.Environment.Exit(1); } CONSOLE_FONT_INFOEX cfi = new CONSOLE_FONT_INFOEX(); cfi.cbSize = (uint)System.Runtime.InteropServices.Marshal.SizeOf(typeof(CONSOLE_FONT_INFOEX)); if (GetCurrentConsoleFontEx(hConsoleOutput, false, ref cfi)) { System.Console.WriteLine(\"FontSize: \" + cfi.dwFontSize.Y + \" FontWidth: \" + cfi.dwFontSize.X + \" FontHeight: \" + cfi.dwFontSize.Y); System.Console.WriteLine(\"FontFamily: \" + cfi.FontFamily + \" FontWeight: \" + cfi.FontWeight + \" FaceName: \" + cfi.FaceName); System.Environment.Exit(0); } else { int errorCode = System.Runtime.InteropServices.Marshal.GetLastWin32Error(); System.Console.WriteLine(\"Failed to get font dimensions. Error code: \" + errorCode); System.Environment.Exit(1); } } }'; [ConsoleFontDimensions]::GetFontDimensions()"
GoTo :EOF

